#!/usr/bin/env bash
#@(#) temp(1sh) - testing a query of system temperatures
# placed in the Public Domain © John S. Urban, 20200328
LINE(){
cat <<\EOF
####################################################################################################################################
EOF
}
(
echo PROCESSOR: TEMPF:HIGH:CRITICAL TEMPC:HIGH:CRITICAL TRIP_POINT_TYPE TYPE
for TEMP_FILE in $(ls -d /sys/class/thermal/thermal_zone*)
do
   (
   cd $TEMP_FILE
   NAME=$(basename $(pwd))
   ORIGINAL_TEMP=$(cat temp)
   TEMP_C=$((ORIGINAL_TEMP/1000))
   TEMP_F=$(( (ORIGINAL_TEMP * 9/5 + 32000)/1000 ))

   TYPE=$(cat type)
   TRIP_POINT_TYPE0=$(cat trip_point_0_type)
   TRIP_POINT_TYPE1=$(cat trip_point_1_type)

   TRIP_POINT_TEMP0=$(cat trip_point_0_temp)
   TRIP_POINT_TEMP_C0=$((TRIP_POINT_TEMP0/1000))
   TRIP_POINT_TEMP_F0=$(( (TRIP_POINT_TEMP_0 * 9/5 + 32000)/1000 ))

   TRIP_POINT_TEMP1=$(cat trip_point_1_temp)
   TRIP_POINT_TEMP_C1=$((TRIP_POINT_TEMP1/1000))
   TRIP_POINT_TEMP_F1=$(( (TRIP_POINT_TEMP_1 * 9/5 + 32000)/1000  ))

   echo $TEMP_FILE: $TEMP_F:$TRIP_POINT_TEMP_F0:${TRIP_POINT_TEMP_F1}F $TEMP_C:$TRIP_POINT_TEMP_C0:${TRIP_POINT_TEMP_C1}C :$TRIP_POINT_TYPE0 $TYPE
   )
done)|column -t
LINE ###############################
find /sys/devices/platform/coretemp.*/hwmon/hwmon*/*temp*input
cat $(find /sys/devices/platform/coretemp.*/hwmon/hwmon*/*temp*input)

cd /sys/devices/platform/coretemp.0/hwmon/hwmon1
grep . temp*|tr -d ' '|sort|xargs -n 5|column -t
LINE ###############################
#httemp
LINE ###############################
#hddemp
LINE ###############################
#lm-sensors
#sensors-detect
sensors
LINE ###############################
#psensor
LINE ###############################
#conky
LINE ###############################
turbostat
LINE ###############################
LINE ###############################
cat /sys/devices/virtual/thermal/thermal_zone?/temp
LINE ###############################
exit
####################################################################################################################################
The CPU temp is your socket temp.
The package temp is you core temp. Keep an eye on this.
Ignore the TMPIN2.

I'd recommend HwInfo over hwmonitor
http://www.hwinfo.com/

Max Temps;
Core- 70C
Socket - 80C
####################################################################################################################################
It sounds like what you want is /sys/class/hwmon and /sys/class/thermal.

Both of these provide simple shell based access to the data you want (the hwmon directory will also include other sensor types). Each has one directory for each sensor interface in your system (which may have more than one sensor).

Three other things to note though:

    Unless you have a really bad system, running the sensors command even once a second shouldn't have any percievable effect. In fact, regularly reading the files in the above mentioned directories may have more of an effect.
    Graphs are your friend here. I would suggest getting something like netdata or collectd running so you have realtime (or near realtime) data to look at.
    Check your voltages too. What your describing could also be due to having a power supply that can't keep up with your system's power requirements. This will be indicated by voltages dropping significantly when the system is under high load.
####################################################################################################################################

@AaronF : I don't disagree. I wrote an Intel specific answer because the OP asked me to. No other tool needs to be installed? The reason I read package temperatures directly via MSRs rather than via /sys/devices/platform/coretemp.0/hwmon/hwmon2/temp1_input is that most of my work is with extremely idle systems, and the latter method has a lot more overhead, resulting in a consistent 4 to 5 degrees higher result. Of course, there is no difference for a heavily loaded system. – Doug Smythies Jul 25 '18 at 12:46

@DougSmythies I thought your answer was very good and complete, which is why I didn't downvote nor leave a negative comment beneath it :-) The rdmsr program is part of msr-tools, which isn't installed by default on my Intel machine (running Ubuntu, maybe other distros install by default if they detect Intel?) – Aaron F Jul 25 '18 at 15:50
@AaronF : I forgot that msr-tools is a needed additional package. So my method also needs and additional tool, which is not what the OP wanted. – Doug Smythies Jul 25 '18 at 15:52
2
Hello @ DougSmythies and Aaron F, I had originally chose DougSmythies as the primary answer because he was the first to provide assistance and his answer was very clear on how to search for the Temperature manually as well as using the manual solution into an easy to use program with mdmsr support, It was in fact a hard decesion as both answers were very informative, But since you both agreed that this answer was the best. I reverted the primary answer to Aaron, thank you for your support. Happy hunting – user610658 Jul 28 '18 at 10:46
####################################################################################################################################
How do I find the temperatures without 3rd party software?

I'm running sensors-detect on my system with lm-sensors because my system keep shutting down when I watch youtube videos

So I'm wondering how can I find the temperatures of the fan and cpu manually without a 3rd party software like lm-sensors? I'm just not sure where they're stored.

processor   : 0
vendor_id   : AuthenticAMD
cpu family  : 16
model       : 6
model name  : AMD Athlon(tm) II X2 240e Processor
power management: ts ttp tm stc 100mhzsteps hwpstate

x86_64
software-recommendation temperature
shareimprove this question
edited Jul 24 '18 at 22:10
wjandrea
11.2k44 gold badges3535 silver badges7171 bronze badges
asked Jul 24 '18 at 21:47
user610658

    What version of Ubuntu are you running? – wjandrea Jul 24 '18 at 21:50
    1
    It depends on your processor. For many recent Intel processors the turbostat program will read the MSRs (Machine Specific Registers) and display the package and core temperatures. Edit your question and add your processor make an model. If it is one that I know, I'll answer with how to do it manually. – Doug Smythies Jul 24 '18 at 21:50 

    would the additional RAM i added have a problem.., RAM is 1333 megatransfers per second, and cpu is max MHz: 2800.0000 – user610658 Jul 24 '18 at 22:14
    11
    What do you mean by third-party? How much of Ubuntu do you think is first-party software? – muru Jul 25 '18 at 0:13
    1
    I'm not exactly sure how many parties Ubuntu uses before the user intercepts the distribution for use. I know in a general aspect that Ubuntu is a Linux operating system that I referred to as the first party, followed by me and then the question at hand, leaving my questionable program the 3rd party rather than saying an off the wall 6th party variant of or after ubtunu sponsors and or volentary programmer softwares, so I don't exactly know. – user610658 Jul 28 '18 at 10:35

show 2 more comments
4 Answers
Active
Oldest
Votes
11

It sounds like what you want is /sys/class/hwmon and /sys/class/thermal.

Both of these provide simple shell based access to the data you want (the hwmon directory will also include other sensor types). Each has one directory for each sensor interface in your system (which may have more than one sensor).

Three other things to note though:

    Unless you have a really bad system, running the sensors command even once a second shouldn't have any percievable effect. In fact, regularly reading the files in the above mentioned directories may have more of an effect.
    Graphs are your friend here. I would suggest getting something like netdata or collectd running so you have realtime (or near realtime) data to look at.
    Check your voltages too. What your describing could also be due to having a power supply that can't keep up with your system's power requirements. This will be indicated by voltages dropping significantly when the system is under high load.

shareimprove this answer
edited Jul 25 '18 at 17:15
answered Jul 25 '18 at 1:42
Austin Hemmelgarn
29711 silver badge55 bronze badges

    This should be the accepted answer, because it deals with the actual question asked: "how can I find the temperatures [...] manually [...]? I'm just not sure where they're stored." Then some /proc/cpuinfo showing an AMD processor. Not sure why OP then accepted an Intel-specific answer which requires another tool to be installed. – Aaron F Jul 25 '18 at 12:04
    @AaronF : I don't disagree. I wrote an Intel specific answer because the OP asked me to. No other tool needs to be installed? The reason I read package temperatures directly via MSRs rather than via /sys/devices/platform/coretemp.0/hwmon/hwmon2/temp1_input is that most of my work is with extremely idle systems, and the latter method has a lot more overhead, resulting in a consistent 4 to 5 degrees higher result. Of course, there is no difference for a heavily loaded system. – Doug Smythies Jul 25 '18 at 12:46 

    1
    @DougSmythies I thought your answer was very good and complete, which is why I didn't downvote nor leave a negative comment beneath it :-) The rdmsr program is part of msr-tools, which isn't installed by default on my Intel machine (running Ubuntu, maybe other distros install by default if they detect Intel?) – Aaron F Jul 25 '18 at 15:50
    @AaronF : I forgot that msr-tools is a needed additional package. So my method also needs and additional tool, which is not what the OP wanted. – Doug Smythies Jul 25 '18 at 15:52
    2
    Hello @ DougSmythies and Aaron F, I had originally chose DougSmythies as the primary answer because he was the first to provide assistance and his answer was very clear on how to search for the Temperature manually as well as using the manual solution into an easy to use program with mdmsr support, It was in fact a hard decesion as both answers were very informative, But since you both agreed that this answer was the best. I reverted the primary answer to Aaron, thank you for your support. Happy hunting – user610658 Jul 28 '18 at 10:46

show 1 more comment
9

This answer is about one way to monitor processor temperature manually for some Intel processors via accessing the Machine Specific Registers (MSR) directly.

The first thing to note is, in this case, what is read out of the MSR is relative to the Tcc, the limit temperature, so an additional calculation is required to determine the actual temperature.

Refer to the Intel® 64 and IA-32 Architectures Software Developer’s Manual, or in your case the AMD equivalent.

In my case, I want bits 22-16 of the MSR at 0x1B1, aka IA32_PACKAGE_THERM_STATUS. The Tcc for my older i7-2600K is 98 degrees.

Here is a simple script to monitor the temperature (and CPU frequency) manually:

#! /bin/dash
#
# temp_mon3 Smythies 2016.10.05
#       a simplified version of temp_mon2,
#       for monitoring temp.
#       Note: it is on purpose that -a is not used.
#       Also CPU0 frequency (1 is good enough, when all
#       are loaded).
#
# temp_mon2 Smythies 2016.09.29
#       Monitor Package temperatures.
#       Use clock modulation to control temps.
#       i.e. simulate the second to last level
#       of defense.
#       Use simple primatives.
#       run as sudo
#       hardcoded for my tcc of 98 degrees.
#
echo ... begin package temperature monitoring ...

#
# In case I forgot (which I often do)

modprobe msr

#
# first let the drastic effect of the sudo command decay
# Done later in temp_mon3.

#
# some stuff

COMMAND="rdmsr --bitfield 22:16 -u 0x1B1"
COMMAND2="cat /sys/devices/system/cpu/cpufreq/policy0/scaling_cur_freq"

#
# then get on with it

while [ 1 ];do
  sleep 4
  TEMP_RAW=$(eval $COMMAND)
  CPU0_FREQ=$(eval $COMMAND2)
  TEMP_ACT=$((98-TEMP_RAW))
  echo "$TEMP_ACT   $CPU0_FREQ"
done

And here is some sample output, where I add some CPU load after awhile (temp goes from 31 to 73 degrees):

$ sudo ./temp_mon3
[sudo] password for doug:
... begin package temperature monitoring ...
31   1605275
31   1605154
32   1605164
30   1605148
31   1605176
51   3511279
54   3511278
55   3511279
57   3511283
58   3511279
60   3511278
61   3511284
63   3511279
64   3511280
64   3511280
66   3511280
67   3511278
68   3511280
68   3511281
69   3511278
71   3511280
70   3511281
71   3511281
71   3511280
72   3511276
72   3511277
73   3511283
73   3511279
^C

shareimprove this answer
answered Jul 24 '18 at 22:34
Doug Smythies
8,91933 gold badges2222 silver badges3333 bronze badges

    Why do you use eval? – wjandrea Jul 24 '18 at 22:48
    @Doug: Great answer to use msr! However, isn't the right msr register 0x19c ? And the temperature is TEMP= TCC - [0x19c bits 22:16] . So it is necessary to read the TCC first. – abu_bua Jul 25 '18 at 0:38
    @abu_bua : I don't know if 0x19c works or not, but what I am using does. And yes, I hardcoded TCC for my processor rather than the better solution which would be to read it from the processor. – Doug Smythies Jul 25 '18 at 1:44
    1
    did you installed sudo apt install msr-tools? – abu_bua Jul 25 '18 at 15:39
    1
    msr-tools is the package. It would be man rdmsr and man wrmsr for two of the individual commands within the package. – Doug Smythies Jul 25 '18 at 21:52

show 6 more comments
5

I don't know what you really want. The lm-sensor program (and therefore the sensors command) make use of the libsensor library; in case you use Ubuntu 18.04 it is libsensors4, version 3.4.0-4. This is the same library which reads the temperature as can be seen in the sysdirectory.

To sum it up, sensors is a good choice. To watch the temperature continuously use

watch -n 1 sensors

If you want to write a program, you have to take a look at libsensors with man libsensorsor take a look in the /usr/share/doc/. You have to include #include <sensors/sensors.h>. It will use the sensors.conffiles /etc/sensors3.conf and/or /etc/sensors.conf. Further (users) configuration can be found in /etc/sensors.d/, if used.

If you think that you are missing some sensors take a look at the /sys/class/thermal or the linked /sys/devices/virtual/thermal directory.

To get the temperatures of the all thermal zones use

$ cat /sys/devices/virtual/thermal/thermal_zone?/temp

77000
66000
67000

The temperature is measured in miliCelcius (mC), in the case above 77.0, 66.0, 67,0 °C.

To watch continously use

watch -n 1 cat /sys/devices/virtual/thermal/thermal_zone?/temp

In this directory you can also find information about your cooling (fan) devices, and how the PID regulators are programmed.

I would also like to state that some overtemperature protection is coded very hardware based (this is a good idea), where the data is placed in your bios.
shareimprove this answer
edited Jul 24 '18 at 23:12
answered Jul 24 '18 at 21:58
abu_bua
5,95888 gold badges2323 silver badges4343 bronze badges

    i know there's programs, but i was looking for a way to manually find th etemps – user610658 Jul 24 '18 at 21:59
    1
    What do you mean by manually? All that things that prints the temperature are programs. – abu_bua Jul 25 '18 at 18:46
    i don't have a thermal_zone, all i have are cooling_device0 1 and 2 but they dont hold a file temp, only cur_state device max_state power subsystem type uevent – user610658 Jul 25 '18 at 21:49
    cur and max state are 0 and 10 – user610658 Jul 25 '18 at 21:50
    What exactly are the thermal_zones? My 4-core Intel CPU seems just to have a single thermal_zone (sensors, however, correctly lists all 4 core temperatures). – Gwyneth Llewelyn Aug 1 '19 at 10:02

add a comment
4

Install Psensor (psensor) from the default Ubuntu repositories and configure Psensor to automatically play an alert sound whenever the temperature goes above a user determined maximum. The purpose of this is to let you hear a warning sound before your system shuts down without adding additional application overhead to your system.

Psensor displays itself on the desktop as a little thermometer icon in the notification area in the upper right corner of the desktop next to the clock. You can right-click the thermometer icon at any time to display the hardware temperatures.
shareimprove this answer
edited Jan 29 '19 at 5:28
####################################################################################################################################
I installed a sensor reporting utility on my Ubuntu machine (a desktop
machine) and it reports drastically different temperatures for the ACPI
CPU reading and the ISA Core 0/Core 1 reading.

The ACPI says the CPU temperature is 31.5 C, but the ISA adapter reports
the Core 0 is 55.0 C and Core 1 is 56.0 C.

Why do the "CPU" and "Core" temperatures differ? Are these sensors in
different locations on the motherboard?

asked Mar 7 '13 at 21:10

Close voter(s): This is a question about ACPI in Ubuntu and how results
are reported. While it happens to have an answer that explains it in
terms of hardware, this probably should be considered to fall within
the scope of our site. – Eliah Kagan Mar 8 '13 at 5:47


    AMD Temp Information and Guide

    We've had a few great threads recently where members contacted AMD and
    asked what temps they should be looking at, what the max temp was on,
    and what programs should be used and why. But this information is
    still scattered and not well defined in one place. It also doesn't
    quite explain when you should be looking at certain temps. Well I've
    made it my mission to insure that people are reading the right temps
    and have been trying my best to give all the information each time
    I respond without sounding like a broken record. So I decided to
    write this information thread and little guide to help you out there.

    What is "Core Temp" ?

    "Core Temp" is what AMD refers to as "TCTL" and is a non-physical
    temperature on an arbitrary scale measured in degrees. It does not
    represent an actual physical temperature like die or case temperature.

    What is "CPU Temp" ?

    "CPU Temp" is read by a sensor in the socket of the motherboard. It
    is a physical temperature and therefore will be effected by ambient
    temps inside the case.

    Why should I use "Core Temp" and when?

    AMD designed this equation to accurately read peak (45C+) and
    load temps. It has an equational offset to determine said temps
    which equalizes at 45C. Since it's designed for peak temps and is
    a non-physical temperature it cannot read idle temps or account for
    ambient temps correctly.

    So what is "CPU Temp" good for then?

    At peak temps this value is typically 7-10C higher (depending
    on motherboard) than the actual temp due to it being a physical
    sensor. At idle it's a little more accurate, but still not dead on,
    and besides idle temps do not matter near as much as load temps do.

    AMD says my chip has a [INSERT SPEC] Celsius limit, what value is
    this referring to? This limit seems kind of low, why?

    This is referring to "Core Temp" of course.

    So for example Phenom IIs have a recommended 62C "Core Temp" limit
    while not exceeding 60C for extended periods.

    It has long been argued that the recommended limit is merely a
    larger safety net. There is a thermal shutdown in the chip at 90C
    and the silicone is rated for 97C+, so it seems plausable that we
    could indeed go higher, but this guide (and most in general) will
    simply nod and point you to the recommended limit for your chip.

    What programs read "Core Temp" ?

    AMD recommends the Core Temp program and AMD Overdrive for this
    reason.

    The core section of HWMonitor also reads this value, but be careful
    as it also shows CPU Temp.

From http://www.overclock.net/t/1128821/amd-temp-information-and-guide
####################################################################################################################################
